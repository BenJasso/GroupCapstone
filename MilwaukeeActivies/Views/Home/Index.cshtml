@model IEnumerable<Activities>

@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Welcome to Milwaukee Activities!</h1>
    <br />
    <p>Here's some things that are going on around you!</p>
    <br />
    <p>If you are a returning user, login to enhance your experience!</p>
    <br />
</div>

<head>
    <style>
        #map {
            height: 500px;
            width: 100%;
        }
        /*html, body {
            height: 100%;
            margin: 0;
            padding: 0;
        }*/

        #description {
            font-family: Roboto;
            font-size: 15px;
            font-weight: 300;
        }

        #infowindow-content .title {
            font-weight: bold;
        }

        #infowindow-content {
            display: none;
        }

        #map #infowindow-content {
            display: inline;
        }

        .pac-card {
            margin: 10px 10px 0 0;
            border-radius: 2px 0 0 2px;
            box-sizing: border-box;
            -moz-box-sizing: border-box;
            outline: none;
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
            background-color: #fff;
            font-family: Roboto;
        }

        #pac-container {
            padding-bottom: 12px;
            margin-right: 12px;
        }

        .pac-controls {
            display: inline-block;
            padding: 5px 11px;
        }

            .pac-controls label {
                font-family: Roboto;
                font-size: 13px;
                font-weight: 300;
            }

        #pac-input {
            background-color: #fff;
            font-family: Roboto;
            font-size: 15px;
            font-weight: 300;
            margin-left: 12px;
            padding: 0 11px 0 13px;
            text-overflow: ellipsis;
            width: 400px;
        }

            #pac-input:focus {
                border-color: #4d90fe;
            }

        #title {
            color: #fff;
            background-color: #4d90fe;
            font-size: 25px;
            font-weight: 500;
            padding: 6px 12px;
        }

        #target {
            width: 345px;
        }
    </style>
</head>
<body>
    <input id="pac-input" class="controls" type="text" placeholder="Search For a Place">
    <div id="map"></div>


    <div>
        <h3>Your Information</h3>
        <hr />
        



        <div class="container" style="margin-top:30px">
            <div class="row">

                <div class="col-sm-1"></div>
                <div class="col-md-10">


                    @foreach (var d in Model)
                    {
                        <div class="card" style="">
                            <img class="card-img-top" src="images/bg.PNG" alt="Card image cap">
                            <div class="card-body">
                                <h5 class="card-title">@d.EventName</h5>
                                <p class="card-text"> @d.Description @d.Company -  At @d.Address Cost: @d.Price</p>
                                <input type="button" value="View" onclick="location.href='@Url.Action("ActivityDetails", "Home", new {id = d.ActivityId})'"/>
                                <a href="" class="btn btn-primary">Favorite</a>
                            </div>
                        </div>

                        <br>
                    }


                    </div>
                <div class="col-sm-1"></div>
            </div>
        </div>






    </div>



    <script>
        function initAutocomplete() {
            var map = new google.maps.Map(document.getElementById('map'), {
                center: { lat: 43.0389, lng: -87.9065 },
                zoom: 13,
                mapTypeId: 'roadmap'
            });

            var input = document.getElementById('pac-input');
            var searchBox = new google.maps.places.SearchBox(input);
            map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

            map.addListener('bounds_changed', function () {
                searchBox.setBounds(map.getBounds());
            });

            var brewers = new google.maps.Marker({
                map: map,
                position: new google.maps.LatLng(43.0280, -87.9733)
            });
            brewers.customInfo = "Milwaukee Brewers / Miller Park";

            var bucks = new google.maps.Marker({
                map: map,
                position: new google.maps.LatLng(43.0444, -87.9176)
            });
            bucks.customInfo = "Milwaukee Bucks / Fiserv Forum";

            google.maps.event.addListener(brewers, 'click', function () {
                alert(this.customInfo);
            });

            google.maps.event.addListener(bucks, 'click', function () {
                alert(this.customInfo);
            });

            var markers = [];
            searchBox.addListener('places_changed', function () {
                var places = searchBox.getPlaces();

                if (places.length == 0) {
                    return;
                }

                markers.forEach(function (marker) {
                    marker.setMap(null);
                });
                markers = [];

                var bounds = new google.maps.LatLngBounds();
                places.forEach(function (place) {
                    if (!place.geometry) {
                        console.log("Returned place contains no geometry");
                        return;
                    }
                    var icon = {
                        url: place.icon,
                        size: new google.maps.Size(71, 71),
                        origin: new google.maps.Point(0, 0),
                        anchor: new google.maps.Point(17, 34),
                        scaledSize: new google.maps.Size(25, 25)
                    };

                    markers.push(new google.maps.Marker({
                        map: map,
                        icon: icon,
                        title: place.name,
                        position: place.geometry.location
                    }));

                    if (place.geometry.viewport) {
                        bounds.union(place.geometry.viewport);
                    } else {
                        bounds.extend(place.geometry.location);
                    }
                });
                map.fitBounds(bounds);
            });
        }
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAGo1Cx5-3NVQ1v599tNS2j3BVgXZtSNa0&libraries=places&callback=initAutocomplete"
            async defer>
    </script>
</body>

